{"ast":null,"code":"var _jsxFileName = \"/Users/dudaalves/iot-agro/src/App.js\",\n  _s = $RefreshSig$();\n// App.js - Componente principal da aplicação\n\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sensorData, setSensorData] = useState({\n    temperatura: 0,\n    luminosidade: 0,\n    umidade: 0\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Configuração do Firebase\n    const firebaseConfig = {\n      // IMPORTANTE: Substitua estas configurações pelas suas credenciais do Firebase\n      apiKey: \"YOUR_API_KEY\",\n      authDomain: \"YOUR_PROJECT_ID.firebaseapp.com\",\n      databaseURL: \"https://YOUR_PROJECT_ID-default-rtdb.firebaseio.com\",\n      projectId: \"YOUR_PROJECT_ID\",\n      storageBucket: \"YOUR_PROJECT_ID.appspot.com\",\n      messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n      appId: \"YOUR_APP_ID\"\n    };\n\n    // Inicializa o Firebase\n    const app = initializeApp(firebaseConfig);\n    const database = getDatabase(app);\n    const sensoresRef = ref(database, 'sensores');\n\n    // Escuta por mudanças no nó 'sensores' do Realtime Database\n    const unsubscribe = onValue(sensoresRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        setSensorData(data);\n      }\n      setLoading(false);\n    });\n\n    // Função de limpeza para desinscrever quando o componente for desmontado\n    return () => unsubscribe();\n  }, []);\n  const teamMembers = ['Ana', 'Evellyn', 'Hobedes', 'Moacir', 'Pedro', 'Thiago'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"IoT Agro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Carregando dados dos sensores...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n        data: sensorData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      members: teamMembers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VCpAZf5sPjn9fUoZOE+b1dyQfbI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","initializeApp","getDatabase","ref","onValue","Dashboard","Header","Footer","jsxDEV","_jsxDEV","App","_s","sensorData","setSensorData","temperatura","luminosidade","umidade","loading","setLoading","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","database","sensoresRef","unsubscribe","snapshot","data","val","teamMembers","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","members","_c","$RefreshReg$"],"sources":["/Users/dudaalves/iot-agro/src/App.js"],"sourcesContent":["// App.js - Componente principal da aplicação\n\nimport React, { useState, useEffect } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [sensorData, setSensorData] = useState({\n    temperatura: 0,\n    luminosidade: 0,\n    umidade: 0\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Configuração do Firebase\n    const firebaseConfig = {\n      // IMPORTANTE: Substitua estas configurações pelas suas credenciais do Firebase\n      apiKey: \"YOUR_API_KEY\",\n      authDomain: \"YOUR_PROJECT_ID.firebaseapp.com\",\n      databaseURL: \"https://YOUR_PROJECT_ID-default-rtdb.firebaseio.com\",\n      projectId: \"YOUR_PROJECT_ID\",\n      storageBucket: \"YOUR_PROJECT_ID.appspot.com\",\n      messagingSenderId: \"YOUR_MESSAGING_SENDER_ID\",\n      appId: \"YOUR_APP_ID\"\n    };\n\n    // Inicializa o Firebase\n    const app = initializeApp(firebaseConfig);\n    const database = getDatabase(app);\n    const sensoresRef = ref(database, 'sensores');\n\n    // Escuta por mudanças no nó 'sensores' do Realtime Database\n    const unsubscribe = onValue(sensoresRef, (snapshot) => {\n      const data = snapshot.val();\n      if (data) {\n        setSensorData(data);\n      }\n      setLoading(false);\n    });\n\n    // Função de limpeza para desinscrever quando o componente for desmontado\n    return () => unsubscribe();\n  }, []);\n\n  const teamMembers = [\n    'Ana',\n    'Evellyn',\n    'Hobedes',\n    'Moacir',\n    'Pedro',\n    'Thiago'\n  ];\n\n  return (\n    <div className=\"app\">\n      <Header title=\"IoT Agro\" />\n      <main className=\"main-content\">\n        {loading ? (\n          <div className=\"loading\">Carregando dados dos sensores...</div>\n        ) : (\n          <Dashboard data={sensorData} />\n        )}\n      </main>\n      <Footer members={teamMembers} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}