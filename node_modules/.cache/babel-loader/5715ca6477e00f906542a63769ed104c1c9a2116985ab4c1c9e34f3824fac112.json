{"ast":null,"code":"var _jsxFileName = \"/Users/dudaalves/iot-agro/src/components/SensorCard.js\";\n// components/SensorCard.js com níveis de qualidade\nimport React from 'react';\nimport './SensorCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorCard = ({\n  title,\n  value,\n  unit,\n  icon,\n  color,\n  qualidadeNivel,\n  qualidadeMensagem,\n  limites,\n  niveis,\n  darkMode\n}) => {\n  // Ícones simples para cada tipo de sensor\n  const getIcon = iconType => {\n    switch (iconType) {\n      case 'temperature':\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          width: \"48\",\n          height: \"48\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12,3C10.9,3 10,3.9 10,5V14.1C9.2,14.6 8.8,15.5 9,16.4C9.2,17.4 10,18.2 11,18.4C11.9,18.6 12.9,18.2 13.4,17.4C13.8,16.8 13.9,16 13.6,15.3C13.4,14.6 12.8,14.1 12,13.9V5C12,4.4 11.6,4 11,4S10,4.4 10,5V12L9.4,11.4C9,11 8.4,11 8,11.4C7.6,11.8 7.6,12.4 8,12.8L10.1,14.9C10,15 10,15.1 10,15.3C10,16.3 10.8,17 11.8,17C12.8,17 13.6,16.2 13.6,15.2C13.6,14.5 13.1,13.8 12.4,13.5V5C12.4,4.7 12.2,4.4 12,4.4C11.8,4.4 11.6,4.7 11.6,5V13.5C10.9,13.8 10.4,14.5 10.4,15.2C10.4,15.9 10.9,16.5 11.5,16.6C12.1,16.8 12.8,16.4 13,15.9C13.2,15.5 13.2,15 13,14.6C12.9,14.4 12.7,14.2 12.4,14.1V5C12.4,4.4 12,4 11.4,4C10.9,4 10.4,4.4 10.4,5V12L9.9,11.4C9.5,11 8.9,11 8.5,11.4C8,11.8 8,12.4 8.5,12.9L10.5,14.9C10.4,15 10.3,15.1 10.3,15.2C10.3,15.6 10.7,16 11.1,16C11.5,16 11.9,15.6 11.9,15.2C11.9,15 11.8,14.8 11.6,14.6V5C11.6,3.9 10.7,3 9.6,3H9.5C8.4,3 7.5,3.9 7.5,5V12.5C7.5,13.9 8.1,15.2 9.2,16.1L9.6,16.4C10.3,17 11.1,17.3 12,17.3C12.9,17.3 13.7,17 14.4,16.4L14.8,16.1C15.9,15.2 16.5,13.9 16.5,12.5V5C16.5,3.9 15.6,3 14.5,3H14.4C13.3,3 12.4,3.9 12.4,5V9.2C12.4,9.7 12.7,10 13.2,10C13.7,10 14,9.7 14,9.2V5C14,4.4 14.4,4 15,4C15.6,4 16,4.4 16,5V12C16,14.2 14.2,16 12,16C9.8,16 8,14.2 8,12V5C8,4.5 8.5,4 9,4C9.5,4 10,4.5 10,5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this);\n      case 'light':\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          width: \"48\",\n          height: \"48\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M3.36,17L5.12,13.23C5.26,14 5.53,14.78 5.95,15.5C6.37,16.24 6.91,16.86 7.5,17.37L3.36,17M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M20.64,17L16.5,17.36C17.09,16.85 17.62,16.22 18.04,15.5C18.46,14.77 18.73,14 18.87,13.21L20.64,17M12,22L9.59,18.56C10.33,18.83 11.14,19 12,19C12.82,19 13.63,18.83 14.37,18.56L12,22Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this);\n      case 'humidity':\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          width: \"48\",\n          height: \"48\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Determinar a classe CSS com base no nível de qualidade\n  let cardClass = 'sensor-card';\n  if (darkMode) cardClass += ' dark-mode';\n  if (qualidadeNivel) {\n    cardClass += ` quality-${qualidadeNivel}`;\n  }\n\n  // Definir a cor baseada no modo escuro\n  const displayColor = darkMode ? getBrighterColor(color) : color;\n\n  // Função para deixar a cor mais brilhante para o modo escuro\n  function getBrighterColor(hexColor) {\n    // Se já for um tom claro, apenas retorna\n    if (hexColor === '#FFC300' || hexColor === '#33A1FF') {\n      return hexColor;\n    }\n    // Se for vermelho, retornar um tom mais claro\n    if (hexColor === '#FF5733') {\n      return '#FF7E62';\n    }\n    return hexColor;\n  }\n\n  // Determinar o ícone e a classe do indicador de qualidade\n  const getQualidadeIcon = nivel => {\n    if (nivel === 'ruim' || nivel === 'regular') {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        width: \"18\",\n        height: \"18\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    } else if (nivel === 'otimo' || nivel === 'bom') {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        width: \"18\",\n        height: \"18\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  // Calcular a porcentagem para a barra de progresso\n  const calculateProgress = () => {\n    if (!limites) return 0;\n    const min = limites.min;\n    const max = limites.max;\n    const range = max - min;\n\n    // Limitar o valor dentro do intervalo min-max para a visualização\n    const limitedValue = Math.max(min, Math.min(max, value));\n\n    // Calcular a porcentagem\n    return (limitedValue - min) / range * 100;\n  };\n\n  // Gerar marcadores para os níveis na barra de progresso\n  const renderNivelMarkers = () => {\n    if (!niveis) return null;\n    const markers = [];\n    const {\n      min,\n      max\n    } = limites;\n    const range = max - min;\n\n    // Para cada nível, calcular a posição na barra\n    // Para temperatura, menor é melhor, então a ordem é contrária\n    if (title === \"Temperatura\") {\n      // Temperatura: ótimo < bom < regular < ruim\n      const otimoPos = (niveis.otimo - min) / range * 100;\n      const bomPos = (niveis.bom - min) / range * 100;\n      const regularPos = (niveis.regular - min) / range * 100;\n      markers.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nivel-marker nivel-otimo\",\n        style: {\n          left: `${otimoPos}%`\n        },\n        title: \"\\xD3timo\"\n      }, \"otimo\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nivel-marker nivel-bom\",\n        style: {\n          left: `${bomPos}%`\n        },\n        title: \"Bom\"\n      }, \"bom\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nivel-marker nivel-regular\",\n        style: {\n          left: `${regularPos}%`\n        },\n        title: \"Regular\"\n      }, \"regular\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this));\n    } else {\n      // Luminosidade e Umidade: ótimo > bom > regular > ruim\n      const otimoPos = (niveis.otimo - min) / range * 100;\n      const bomPos = (niveis.bom - min) / range * 100;\n      const regularPos = (niveis.regular - min) / range * 100;\n      markers.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nivel-marker nivel-otimo\",\n        style: {\n          left: `${otimoPos}%`\n        },\n        title: \"\\xD3timo\"\n      }, \"otimo\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nivel-marker nivel-bom\",\n        style: {\n          left: `${bomPos}%`\n        },\n        title: \"Bom\"\n      }, \"bom\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nivel-marker nivel-regular\",\n        style: {\n          left: `${regularPos}%`\n        },\n        title: \"Regular\"\n      }, \"regular\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this));\n    }\n    return markers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cardClass,\n    style: {\n      borderColor: displayColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-icon\",\n      style: {\n        color: displayColor\n      },\n      children: getIcon(icon)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-value\",\n        style: {\n          color: displayColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"value\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"unit\",\n          children: unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), qualidadeNivel !== 'none' && qualidadeMensagem && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `quality-indicator quality-${qualidadeNivel}`,\n        children: [getQualidadeIcon(qualidadeNivel), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: qualidadeMensagem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), limites && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"limites-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"limites-range\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"min-value\",\n            children: [limites.min, unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"max-value\",\n            children: [limites.max, unit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${calculateProgress()}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), niveis && renderNivelMarkers()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_c = SensorCard;\nexport default SensorCard;\nvar _c;\n$RefreshReg$(_c, \"SensorCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SensorCard","title","value","unit","icon","color","qualidadeNivel","qualidadeMensagem","limites","niveis","darkMode","getIcon","iconType","xmlns","viewBox","fill","width","height","children","d","fileName","_jsxFileName","lineNumber","columnNumber","cardClass","displayColor","getBrighterColor","hexColor","getQualidadeIcon","nivel","calculateProgress","min","max","range","limitedValue","Math","renderNivelMarkers","markers","otimoPos","otimo","bomPos","bom","regularPos","regular","push","className","style","left","borderColor","_c","$RefreshReg$"],"sources":["/Users/dudaalves/iot-agro/src/components/SensorCard.js"],"sourcesContent":["// components/SensorCard.js com níveis de qualidade\nimport React from 'react';\nimport './SensorCard.css';\n\nconst SensorCard = ({ \n  title, \n  value, \n  unit, \n  icon, \n  color, \n  qualidadeNivel, \n  qualidadeMensagem,\n  limites,\n  niveis,\n  darkMode \n}) => {\n  // Ícones simples para cada tipo de sensor\n  const getIcon = (iconType) => {\n    switch (iconType) {\n      case 'temperature':\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"48\" height=\"48\">\n            <path d=\"M12,3C10.9,3 10,3.9 10,5V14.1C9.2,14.6 8.8,15.5 9,16.4C9.2,17.4 10,18.2 11,18.4C11.9,18.6 12.9,18.2 13.4,17.4C13.8,16.8 13.9,16 13.6,15.3C13.4,14.6 12.8,14.1 12,13.9V5C12,4.4 11.6,4 11,4S10,4.4 10,5V12L9.4,11.4C9,11 8.4,11 8,11.4C7.6,11.8 7.6,12.4 8,12.8L10.1,14.9C10,15 10,15.1 10,15.3C10,16.3 10.8,17 11.8,17C12.8,17 13.6,16.2 13.6,15.2C13.6,14.5 13.1,13.8 12.4,13.5V5C12.4,4.7 12.2,4.4 12,4.4C11.8,4.4 11.6,4.7 11.6,5V13.5C10.9,13.8 10.4,14.5 10.4,15.2C10.4,15.9 10.9,16.5 11.5,16.6C12.1,16.8 12.8,16.4 13,15.9C13.2,15.5 13.2,15 13,14.6C12.9,14.4 12.7,14.2 12.4,14.1V5C12.4,4.4 12,4 11.4,4C10.9,4 10.4,4.4 10.4,5V12L9.9,11.4C9.5,11 8.9,11 8.5,11.4C8,11.8 8,12.4 8.5,12.9L10.5,14.9C10.4,15 10.3,15.1 10.3,15.2C10.3,15.6 10.7,16 11.1,16C11.5,16 11.9,15.6 11.9,15.2C11.9,15 11.8,14.8 11.6,14.6V5C11.6,3.9 10.7,3 9.6,3H9.5C8.4,3 7.5,3.9 7.5,5V12.5C7.5,13.9 8.1,15.2 9.2,16.1L9.6,16.4C10.3,17 11.1,17.3 12,17.3C12.9,17.3 13.7,17 14.4,16.4L14.8,16.1C15.9,15.2 16.5,13.9 16.5,12.5V5C16.5,3.9 15.6,3 14.5,3H14.4C13.3,3 12.4,3.9 12.4,5V9.2C12.4,9.7 12.7,10 13.2,10C13.7,10 14,9.7 14,9.2V5C14,4.4 14.4,4 15,4C15.6,4 16,4.4 16,5V12C16,14.2 14.2,16 12,16C9.8,16 8,14.2 8,12V5C8,4.5 8.5,4 9,4C9.5,4 10,4.5 10,5\"/>\n          </svg>\n        );\n      case 'light':\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"48\" height=\"48\">\n            <path d=\"M12,7A5,5 0 0,0 7,12A5,5 0 0,0 12,17A5,5 0 0,0 17,12A5,5 0 0,0 12,7M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M3.36,17L5.12,13.23C5.26,14 5.53,14.78 5.95,15.5C6.37,16.24 6.91,16.86 7.5,17.37L3.36,17M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M20.64,17L16.5,17.36C17.09,16.85 17.62,16.22 18.04,15.5C18.46,14.77 18.73,14 18.87,13.21L20.64,17M12,22L9.59,18.56C10.33,18.83 11.14,19 12,19C12.82,19 13.63,18.83 14.37,18.56L12,22Z\" />\n          </svg>\n        );\n      case 'humidity':\n        return (\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"48\" height=\"48\">\n            <path d=\"M12,3.25C12,3.25 6,10 6,14C6,17.32 8.69,20 12,20A6,6 0 0,0 18,14C18,10 12,3.25 12,3.25M14.47,9.97L15.53,11.03L9.53,17.03L8.47,15.97M9.75,10A1.25,1.25 0 0,1 11,11.25A1.25,1.25 0 0,1 9.75,12.5A1.25,1.25 0 0,1 8.5,11.25A1.25,1.25 0 0,1 9.75,10M14.25,14.5A1.25,1.25 0 0,1 15.5,15.75A1.25,1.25 0 0,1 14.25,17A1.25,1.25 0 0,1 13,15.75A1.25,1.25 0 0,1 14.25,14.5Z\" />\n          </svg>\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Determinar a classe CSS com base no nível de qualidade\n  let cardClass = 'sensor-card';\n  if (darkMode) cardClass += ' dark-mode';\n  \n  if (qualidadeNivel) {\n    cardClass += ` quality-${qualidadeNivel}`;\n  }\n\n  // Definir a cor baseada no modo escuro\n  const displayColor = darkMode ? getBrighterColor(color) : color;\n\n  // Função para deixar a cor mais brilhante para o modo escuro\n  function getBrighterColor(hexColor) {\n    // Se já for um tom claro, apenas retorna\n    if (hexColor === '#FFC300' || hexColor === '#33A1FF') {\n      return hexColor;\n    }\n    // Se for vermelho, retornar um tom mais claro\n    if (hexColor === '#FF5733') {\n      return '#FF7E62';\n    }\n    return hexColor;\n  }\n\n  // Determinar o ícone e a classe do indicador de qualidade\n  const getQualidadeIcon = (nivel) => {\n    if (nivel === 'ruim' || nivel === 'regular') {\n      return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"18\" height=\"18\">\n          <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"/>\n        </svg>\n      );\n    } else if (nivel === 'otimo' || nivel === 'bom') {\n      return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"18\" height=\"18\">\n          <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/>\n        </svg>\n      );\n    }\n    return null;\n  };\n\n  // Calcular a porcentagem para a barra de progresso\n  const calculateProgress = () => {\n    if (!limites) return 0;\n    \n    const min = limites.min;\n    const max = limites.max;\n    const range = max - min;\n    \n    // Limitar o valor dentro do intervalo min-max para a visualização\n    const limitedValue = Math.max(min, Math.min(max, value));\n    \n    // Calcular a porcentagem\n    return ((limitedValue - min) / range) * 100;\n  };\n\n  // Gerar marcadores para os níveis na barra de progresso\n  const renderNivelMarkers = () => {\n    if (!niveis) return null;\n    \n    const markers = [];\n    const { min, max } = limites;\n    const range = max - min;\n    \n    // Para cada nível, calcular a posição na barra\n    // Para temperatura, menor é melhor, então a ordem é contrária\n    if (title === \"Temperatura\") {\n      // Temperatura: ótimo < bom < regular < ruim\n      const otimoPos = ((niveis.otimo - min) / range) * 100;\n      const bomPos = ((niveis.bom - min) / range) * 100;\n      const regularPos = ((niveis.regular - min) / range) * 100;\n      \n      markers.push(\n        <div key=\"otimo\" className=\"nivel-marker nivel-otimo\" style={{ left: `${otimoPos}%` }} title=\"Ótimo\"></div>,\n        <div key=\"bom\" className=\"nivel-marker nivel-bom\" style={{ left: `${bomPos}%` }} title=\"Bom\"></div>,\n        <div key=\"regular\" className=\"nivel-marker nivel-regular\" style={{ left: `${regularPos}%` }} title=\"Regular\"></div>\n      );\n    } else {\n      // Luminosidade e Umidade: ótimo > bom > regular > ruim\n      const otimoPos = ((niveis.otimo - min) / range) * 100;\n      const bomPos = ((niveis.bom - min) / range) * 100;\n      const regularPos = ((niveis.regular - min) / range) * 100;\n      \n      markers.push(\n        <div key=\"otimo\" className=\"nivel-marker nivel-otimo\" style={{ left: `${otimoPos}%` }} title=\"Ótimo\"></div>,\n        <div key=\"bom\" className=\"nivel-marker nivel-bom\" style={{ left: `${bomPos}%` }} title=\"Bom\"></div>,\n        <div key=\"regular\" className=\"nivel-marker nivel-regular\" style={{ left: `${regularPos}%` }} title=\"Regular\"></div>\n      );\n    }\n    \n    return markers;\n  };\n\n  return (\n    <div className={cardClass} style={{ borderColor: displayColor }}>\n      <div className=\"sensor-icon\" style={{ color: displayColor }}>\n        {getIcon(icon)}\n      </div>\n      <div className=\"sensor-info\">\n        <h2>{title}</h2>\n        <div className=\"sensor-value\" style={{ color: displayColor }}>\n          <span className=\"value\">{value}</span>\n          <span className=\"unit\">{unit}</span>\n        </div>\n        \n        {/* Indicador de qualidade */}\n        {qualidadeNivel !== 'none' && qualidadeMensagem && (\n          <div className={`quality-indicator quality-${qualidadeNivel}`}>\n            {getQualidadeIcon(qualidadeNivel)}\n            <span>{qualidadeMensagem}</span>\n          </div>\n        )}\n        \n        {/* Barra de progresso com limites e marcadores de níveis */}\n        {limites && (\n          <div className=\"limites-progress\">\n            <div className=\"limites-range\">\n              <span className=\"min-value\">{limites.min}{unit}</span>\n              <span className=\"max-value\">{limites.max}{unit}</span>\n            </div>\n            <div className=\"progress-container\">\n              <div className=\"progress-bar\" style={{ width: `${calculateProgress()}%` }}></div>\n              {niveis && renderNivelMarkers()}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SensorCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}